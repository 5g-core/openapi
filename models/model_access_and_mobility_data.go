/*
 * Nudr_DataRepository API OpenAPI file
 *
 * Unified Data Repository Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 2.1.5
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

import (

	"time"
)


type AccessAndMobilityData struct {


	
	// simple type
 
	

	Location *UserLocation `json:"location,omitempty" yaml:"location" bson:"location" mapstructure:"Location"`
 
	

	LocationTs *time.Time `json:"locationTs,omitempty" yaml:"locationTs" bson:"locationTs" mapstructure:"LocationTs"`
 
	

	TimeZone *string `json:"timeZone,omitempty" yaml:"timeZone" bson:"timeZone" mapstructure:"TimeZone"`
 
	

	TimeZoneTs *time.Time `json:"timeZoneTs,omitempty" yaml:"timeZoneTs" bson:"timeZoneTs" mapstructure:"TimeZoneTs"`
 
	

	AccessType *AccessType `json:"accessType,omitempty" yaml:"accessType" bson:"accessType" mapstructure:"AccessType"`
 
	

	RegStates *[]RmInfo `json:"regStates,omitempty" yaml:"regStates" bson:"regStates" mapstructure:"RegStates"`
 
	

	RegStatesTs *time.Time `json:"regStatesTs,omitempty" yaml:"regStatesTs" bson:"regStatesTs" mapstructure:"RegStatesTs"`
 
	

	ConnStates *[]CmInfo `json:"connStates,omitempty" yaml:"connStates" bson:"connStates" mapstructure:"ConnStates"`
 
	

	ConnStatesTs *time.Time `json:"connStatesTs,omitempty" yaml:"connStatesTs" bson:"connStatesTs" mapstructure:"ConnStatesTs"`
 
	

	ReachabilityStatus *UeReachability `json:"reachabilityStatus,omitempty" yaml:"reachabilityStatus" bson:"reachabilityStatus" mapstructure:"ReachabilityStatus"`
 
	

	ReachabilityStatusTs *time.Time `json:"reachabilityStatusTs,omitempty" yaml:"reachabilityStatusTs" bson:"reachabilityStatusTs" mapstructure:"ReachabilityStatusTs"`
 
	

	SmsOverNasStatus *SmsSupport `json:"smsOverNasStatus,omitempty" yaml:"smsOverNasStatus" bson:"smsOverNasStatus" mapstructure:"SmsOverNasStatus"`
 
	

	SmsOverNasStatusTs *time.Time `json:"smsOverNasStatusTs,omitempty" yaml:"smsOverNasStatusTs" bson:"smsOverNasStatusTs" mapstructure:"SmsOverNasStatusTs"`

	// True  The serving PLMN of the UE is different from the HPLMN of the UE; False  The serving PLMN of the UE is the HPLMN of the UE. 
	

	RoamingStatus *bool `json:"roamingStatus,omitempty" yaml:"roamingStatus" bson:"roamingStatus" mapstructure:"RoamingStatus"`
 
	

	RoamingStatusTs *time.Time `json:"roamingStatusTs,omitempty" yaml:"roamingStatusTs" bson:"roamingStatusTs" mapstructure:"RoamingStatusTs"`
 
	

	CurrentPlmn *PlmnId `json:"currentPlmn,omitempty" yaml:"currentPlmn" bson:"currentPlmn" mapstructure:"CurrentPlmn"`
 
	

	CurrentPlmnTs *time.Time `json:"currentPlmnTs,omitempty" yaml:"currentPlmnTs" bson:"currentPlmnTs" mapstructure:"CurrentPlmnTs"`
 
	

	RatType *[]RatType `json:"ratType,omitempty" yaml:"ratType" bson:"ratType" mapstructure:"RatType"`
 
	

	RatTypesTs *time.Time `json:"ratTypesTs,omitempty" yaml:"ratTypesTs" bson:"ratTypesTs" mapstructure:"RatTypesTs"`
 
	

	SuppFeat *string `json:"suppFeat,omitempty" yaml:"suppFeat" bson:"suppFeat" mapstructure:"SuppFeat"`
}
